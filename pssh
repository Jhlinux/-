pssh 是用python写的
pssh的功能：
     使用密码批量 多并发远程其他主机
     使用密钥批量 多并发远程其他主机
     批量 多并发拷贝数据到其他主机
     批量 多并发从其他主机下载数据到本机
     批量 多并发杀死其他主机进程
实验方案如下：
     主机名               ip地址
     proxy            eth0:192.168.4.5
                      eth1:192.168.2.5
_____________________________________________
     client           eth0:192.168.4.10
     web1             eth0:192.168.2.100
     web2             eth0:192.168.2.200
配置pssh
安装pssh软件
[root@proxy ~]# ls
pssh-2.3.1-5.el7.noarch.rpm
[root@proxy ~]# yum -y install pssh-2.3.1-5.el7.noarch.rpm
修改本地/etc/hosts
[root@proxy ~]# vim /etc/hosts
192.168.2.100 host1
192.168.2.200 host2
192.168.4.9 host3
[root@proxy ~]# vim /root/host.txt
root@host1
host2
host3
pssh 提供并发远程连接功能
-A   使用密码远程其他主机（默认使用密钥）
-i   将输出显示在屏幕
-H   设置需要连接的主机
-h   设置主机列表文件
-p   设置并发数量
-t   设置超时时间
-o dir  设置标准输出信息保存的目录
-e dir  设置错误输出信息保存的目录
-x   传递参数给ssh
pssh 的使用：远程其他主机执行shell命令
使用密码 多并发远程其他主机
[root@proxy ~]# pssh -A -i -H 'host1 host2 host3' -x '-o StrictHostKeyChecking=no' echo hello 
                #-x 里的参数只在第一次连接时需要 之后就没用了
Warning: do not enter your password if anyone else has superuser
privileges or access to your account.
Password: 
[1] 21:15:24 [SUCCESS] host3
hello
[2] 21:15:24 [SUCCESS] host1
hello
[root@proxy ~]# pssh -A -h host.txt echo hello
Warning: do not enter your password if anyone else has superuser
privileges or access to your account.
Password: 
[1] 21:19:02 [SUCCESS] root@host1
[2] 21:19:02 [SUCCESS] host3
[3] 21:19:02 [SUCCESS] host2
创建密钥：
[root@proxy ~]# ssh-keygen  -N '' -f /root/.ssh/id_rsa #非交互式创建密钥
[root@proxy ~]# ssh-copy-id host1
[root@proxy ~]# ssh-copy-id host2
[root@proxy ~]# ssh-copy-id host3
使用密钥远程其他主机：
[root@proxy ~]# pssh -h host.txt echo hello #不加A选项 默认使用密钥连接
[1] 21:33:22 [SUCCESS] root@host1
[2] 21:33:22 [SUCCESS] host2
[3] 21:33:22 [SUCCESS] host3
pscp.pssh 的使用：远程并发拷贝
      -r 表示拷贝目录
[root@proxy ~]# pscp.pssh -h host.txt /etc/passwd /root/
                 #将/etc/passwd 文件拷贝到那三台主机的root目录下
[1] 21:42:50 [SUCCESS] root@host1
[2] 21:42:50 [SUCCESS] host2
[3] 21:42:50 [SUCCESS] host3
pslurp 的使用：远程拷贝其他主机的文件到自己主机
[root@proxy ~]# mkdir test
[root@proxy ~]# cd test/
[root@proxy test]# pslurp -h /root/host.txt /etc/passwd / #这不是真的根 
[1] 22:29:17 [SUCCESS] root@host1
[2] 22:29:17 [SUCCESS] host2
[3] 22:29:17 [SUCCESS] host3
[root@proxy test]# ls
host1  host2  host3
[root@proxy test]# ls host1
passwd
[root@proxy test]# ls host2
passwd
[root@proxy test]# ls host3
passwd
[root@proxy test]# pslurp -h /root/host.txt -L /media/ /etc/passwd /
[1] 07:16:44 [SUCCESS] root@host1
[2] 07:16:44 [SUCCESS] host3
[3] 07:16:44 [SUCCESS] host2
[root@proxy test]# ls /media/
host1  host2  host3
pnuke 的使用：远程批量杀死进程
[root@proxy ~]# pnuke -h host.txt sleep #杀死和sleep相关的进程
[1] 07:20:15 [SUCCESS] root@host1
[2] 07:20:15 [SUCCESS] host2
[3] 07:20:15 [SUCCESS] host3
[root@client ~]# sleep 200
已杀死
[root@web1 ~]# sleep 200
已杀死

