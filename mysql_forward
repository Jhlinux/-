               mysql主从+读写分离+集群
mysql 主从同步：一主一从的配置
主库配置：
[root@mysql50 ~]# vim /etc/my.cnf
[mysqld]
server_id=50
log-bin=master50
[root@mysql50 ~]# systemctl restart mysqld
[root@mysql50~]# mysql -uroot -p123456 #用户授权：
mysql> grant replication slave on *.* to repluser@"%" identified by "123456";
Query OK, 0 rows affected, 1 warning (0.06 sec)

mysql> grant all on *.* to jhh@"%" identified by "123456" with grant option;
Query OK, 0 rows affected, 1 warning (0.03 sec)

mysql> show master status;#查看主服务器日志
File            | Position
master50.000001 |      441 |
配置从库：
[root@mysql52 ~]# vim /etc/my.cnf
     [mysqld]
      server_id=52
[root@mysql52 ~]# systemctl restart mysqld
[root@mysql52 ~]# mysql -uroot -p123456
mysql> change master to  #指定主库信息
    -> master_host="192.168.4.50",
    -> master_user="repluser",
    -> master_password="123456",
    -> master_log_file="master50.000001",
    -> master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.21 sec)

mysql> start slave; #启动slave程序
Query OK, 0 rows affected (0.03 sec)

mysql> show slave status\G;#查看状态信息
       Master_Host: 192.168.4.50
       Master_User: repluser
       Read_Master_Log_Pos: 441
       Slave_IO_Running: Yes
       Slave_SQL_Running: Yes
与从库相关的文件：
[root@mysql52~]# ls /var/lib/mysql
        master.info
        mysql52-relay-bin.000001
        mysql52-relay-bin.index
        relay-log.info
######################################################
主从同步结构模式
     一主一从
     一主多从
     主主从从（互为主从）
#########################################################
mysql 主从同步----> 一主多从
    一个主库，同时给这个主库配置多个从库方法同上
###########################################################
mysql 主从同步----> 主从从
   把主机54配置为53的从库
    主  从  从
    50  53  54
思路：
       客户端51 -----主服务器50 <----53 主从库 <----54从库
在50主机上给用户jhh授权
[root@mysql50 ~]# mysql -uroot -p123456
mysql> grant all on *.* to jhh@"%" identified by "123456" with grant option;
Query OK, 0 rows affected, 1 warning (0.07 sec)

将50主机配置为主库
[root@mysql50~]# vim /etc/my.cnf
    [mysqld]
    server_id=50
    bin-log=master50 #启用binlog日志并命名为master50

将53主机配置为50的从库，54的主库，并开启级连复制功能
将53配置成50的从库
在配置从库之前要保证被配置成从库的数据库数据与主库数据一致
[root@mysql50~]# mysql -uroot -p123456
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| db7                |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)
[root@mysql50~]# mysqldump -uroot -p123456 db7 > /root/db7.sql
[root@mysql50~]# scp /root/db7.sql root@192.168.4.53:/root/
[root@mysql53~]# mysql -uroot -p123456
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> create database db7;
[root@mysql53~]# mysql -uroot -p123456 db7 < /root/db7.sql
[root@mysql53~]# vim /etc/my.cnf
      [mysqld]
      server_id=53
      bin-log=master53
[root@mysql53~]# mysql -uroot -p123456
mysql> change master to
     > master_host="192.168.4.50",
     > master_user="jhh",
     > master_password="123456",
     > master_log_file="master50.000001",
    #要在50主机上登入数据库查看 show master status;
     > master_log_pos=441 #同上
mysql> start slave; #开启slave程序
mysql> show slave status\G;#查看slave状态信息
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 192.168.4.50
                  Master_User: jhh
                  Master_Port: 3306
              Master_Log_File: master50.000003
               Relay_Log_File: mysql53-relay-bin.000006
        Relay_Master_Log_File: master50.000003
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes

将53配置成54的主库即54为53的从库并开启级连复制功能
[root@mysql53~]# mysql -uroot -p123456
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| db7                |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)
[root@mysql53~]# mysqldump -uroot -p123456 db7 > /root/db7.sql
[root@mysql53~]# scp /root/db7.sql root@192.168.4.54:/root/
[root@mysql53~]# vim /etc/my.cnf
                    [mysqld]
                    server_id=53
                    #log-bin
                    log-bin=master53 #启用binlog日志并命名为master53
                    log_slave_updates #开启级连复制功能
                    validate_password_policy=0
                    validate_password_length=6
[root@mysql53~]# systemctl restart mysqld

[root@mysql54~]# mysql -uroot -p123456 
mysql> show databases;
      +--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)
mysql> create database db7;
[root@mysql54~]# mysql -uroot -p123456 db7 < /root/db7.sql
[root@mysql54~]# systemctl restart mysqld
[root@mysql54~]# vim /etc/my.cnf
                     [mysqld]
                     server_id=54
                     validate_password_policy=0
                     validate_password_length=6
[root@mysql54~]# systemctl restart mysqld
[root@mysql54~]# mysql -uroot -p123456
mysql> show master status\G;
Empty set (0.00 sec)

mysql> change master to
     > master_host="192.168.4.53",
     > master_user="jhh",
     > master_password="123456",
     > master_log_file="master53.000005",
     #要在53上登入数据库查看--> show master status;
     > master_log_pos=436;#同上
mysql> start slave;#启用slave程序
mysql> show slave status\G;#查看slave状态信息
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 192.168.4.53
                  Master_User: jhh
                  Master_Port: 3306
              Master_Log_File: master53.000003
               Relay_Log_File: mysql54-relay-bin.000006
        Relay_Master_Log_File: master53.000003
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
在客户端51上使用jhh用户登陆50主机写入数据，在53，54主机上查看
[root@mysql51~]# mysql -h192.168.4.50 -ujhh -p123456
mysql> show databases;
mysql> use db7;
mysql> show tables;
mysql> insert into db7.t1 values(99999999);
[root@mysql53~]# mysql -uroot -p123456
mysql> use db7;
mysql> select * from t1;
[root@mysql54~]# mysql -uroot -p123456
mysql> use db7;
mysql> select * from t1;
##############################################################################
mysql互为主从结构：
    50客户端----55和56互为主从
配置55主机为主库
[root@mysql55 ~]# vim /etc/my.cnf
                           server_id=55
                           log-bin=master55
[root@mysql55 ~]# systemctl restart mysqld
[root@mysql55 ~]# systemctl enable mysqld
[root@mysql55 ~]# ls /var/lib/mysql/master55.*
/var/lib/mysql/master55.000001
/var/lib/mysql/master55.index

配置56为主库：
[root@mysql56 ~]# vim /etc/my.cnf
                      server_id=56
                      log-bin=master56  
[root@mysql56 ~]# systemctl restart mysqld
[root@mysql56 ~]# systemctl enable mysqld
[root@mysql56 ~]# ls /var/lib/mysql/master56.*
/var/lib/mysql/master56.000001
/var/lib/mysql/master56.index

配置55为56的从库：
[root@mysql55 ~]# mysql -uroot -p123456
mysql> show slave status\G;#查看是否有从库配置
Empty set (0.00 sec)

mysql> change master to
     > master_host="192.168.4.56",
     > master_user="jhh",
     > master_password="123456",
     > master_log_file="master56.000001",
      #在56上查看show master status;
     > master_log_pos=436; #同上
mysql> start slave;#开启slave程序
mysql> show slave status\G;查看slave状态信息

在客户端50使用授权用户jhh连接主库56进行测试
[root@mysql56~]# mysql -uroot -p123456
mysql> grant all on *.* to jhh@"%" identified by "123456" with grant option; #添加授权用户jhh
Query OK, 0 rows affected, 1 warning (0.00 sec
[root@mysql50~]# mysql -h192.168.4.56 -ujhh -p123456
mysql> show databases;
mysql> use db7;
mysql> insert into db7.t1 values(9999999999);
mysql> select * from db7.t1;
使用授权用户在客户端连接从库也可以查看到和主库一样的数据

配置56为55的从库：
[root@mysql56 ~]# mysql -uroot -p123456
mysql> show slave status\G;查看是否有从库配置
Empty set (0.00 sec)

mysql> change master to
     > master_host="192.168.4.55",
     > master_user="jhh",
     > master_password="123456",
     > master_log_file="master55.000001",
      #在55上查看 mysql> show master status;
     > master_log_pos=436;#同上
mysql> start slave;#开启slave程序
mysql> show slave status\G;#查看slave状态
##################################################
###################################################      
mysql主从同步常用选项：
主库参数：对所有的从库有效
      binlog_do_db=db8,db9 #仅允许同步db8,db9中的数据
      binlog_ignore_db=db7,db8,db5 #不允许同步的库名列表
   mysql> show master status;
从库参数：仅对从库自身有效
      log_slave_updates #允许级连复制
      replicate_do_db=db8,db9 #仅同步的库名列表
      replicate_ignore_db=db7,db8 #不同步的库名列表
   mysql> show master status\G;
          Replicate_Do_Db:仅同步的库名列表
          Replicate_Ignore_Db:不同步的库名列表       
#########################################################
主库55配置：启用半同步复制功能
[root@mysql55~]# vim /etc/my.cnf       
[mysqld]
plugin-load=rpl_semi_sync_master=semisync_master.so #加载模块
rpl_semi_sync_master_enabled=1 #启用半同步复制模式
[root@mysql55~]# mysql -uroot -p123456
mysql> show variables like "rpl_semi_sync_%_enabled";
       #查看半同步复制模块是否启用
+------------------------------+-------+
| Variable_name                | Value |
+------------------------------+-------+
| rpl_semi_sync_master_enabled | ON    |
+------------------------------+-------+
1 row in set (0.00 sec)

从库56配置：启用半同步复制功能  
[root@mysql56~]# vim /etc/my.cnf       
[mysqld]
plugin-load=rpl_semi_sync_slave=semisync_slave.so #加载模块
rpl_semi_sync_slave_enabled=1 #启用半同步复制模式

[root@mysql56~]# mysql -uroot -p123456
mysql> show variables like "rpl_semi_sync_%_enabled";
       #查看半同步复制模块是否启用
+------------------------------+-------+
| Variable_name                | Value |
+------------------------------+-------+
| rpl_semi_sync_slave_enabled | ON    |
+------------------------------+-------+
1 row in set (0.00 sec)
########################################################
########################################################
mysql读写分离 多实例  性能调优
         客户端50
            |
            |
      读写分离服务器57
        maxscale
            |
            |
————————————-——————————————
   |               |
   |               |
 主库51          从库52 

配置mysql主从结构
配置读写分离服务器：
    安装maxscale软件
[root@mysql57 ~]# rpm -ivh maxscale-2.1.2-1.rhel.7.x86_64.rpm
[root@mysql57 ~]# ls /etc/maxscale.cnf
/etc/maxscale.cnf
[root@mysql57 ~]# max
maxadmin        maxbinlogcheck  maxpasswd       
maxavrocheck    maxkeys         maxscale  
    修改配置文件
[root@mysql57 ~]# vim /etc/maxscale.cnf
  9 [maxscale] #定义服务线程数量
 10 threads=auto
 18 [server1] #指定数据库服务器ip地址
 19 type=server
 20 address=192.168.4.51 #主库ip
 24 [server2]
 25 type=server
 26 address=192.168.4.52 #从库ip
 35 [MySQL Monitor] #
 38 servers=server1,server2
 39 user=jhh #监控用户
 40 passwd=123456
 52 [read-Only Service]
 53 #type=service
 54 #router=readconnroute
 55 #servers=server1
 56 #user=myuser
 57 #passwd=mypwd
 58 #router_options=slave
 66 servers=server1,server2
 67 user=scale #路由用户
 68 passwd=123456
 85 #[Read-Only Listener] #不定义只读服务的端口号
 86 #type=listener
 87 #service=Read-Only Service
 88 #protocol=MySQLClient
 89 #port=4008
 91 [Read-Write Listener]
 92 type=listener
 93 service=Read-Write Service
 94 protocol=MySQLClient
 95 port=4006 #读写分离服务器监听的端口

 97 [MaxAdmin Listener] #定义管理服务的端口号
 102 port=4016 #管理服务用的端口
给监听用户授权
[root@mysql51 ~]# mysql -uroot -p123456
mysql> grant replication slave,replication client on *.* to jhh@"%" identified by "123456";
Query OK, 0 rows affected, 1 warning (0.04 sec)

给路由用户授权
mysql> grant select on mysql.* to scale@"%" identified by "123456";
Query OK, 0 rows affected, 1 warning (0.03 sec)
mysql> select host,user from mysql.user;
+-----------+-----------+
| host      | user      |
+-----------+-----------+
| %         | jhh       |
| %         | mydba     |
| %         | scale     |
| %         | yy        |
| localhost | admin     |
| localhost | mysql.sys |
| localhost | root      |
+-----------+-----------+
7 rows in set (0.00 sec)

在52上查看授权信息
[root@mysql52 ~]# mysql -uroot -p123456
mysql> select host,user from mysql.user;
+-----------+-----------+
| host      | user      |
+-----------+-----------+
| %         | jhh       |
| %         | scale     |
| localhost | mysql.sys |
| localhost | root      |
+-----------+-----------+
4 rows in set (0.01 sec)

在57上测试授权用户
[root@mysql57 ~]# mysql -h192.168.4.51  -ujhh -p123456
[root@mysql57 ~]# mysql -h192.168.4.52  -ujhh -p123456
 
在57上启动服务
[root@mysql57 ~]# maxscale -f /etc/maxscale.cnf

停止服务的命令
[root@mysql57 ~]# killall -9  maxscale

查看服务信息
[root@mysql57 ~]# netstat -utnlp | grep maxscale
tcp6  0  0 :::4016  :::*   LISTEN   11461/maxscale      
tcp6  0  0 :::4006  :::*   LISTEN   11461/maxscale  

在本机访问管理服务查看监控信息
[root@mysql57 ~]# maxadmin -P4016 -uadmin -pmariadb
MaxScale> list servers
Servers.
------- +------------- +-------+-------------+--------------------
Server  | Address      | Port  | Connections | Status              
--------+--------------+-------+-------------+--------------------
server1 | 192.168.4.51 |  3306 |           0 | Master, Running
server2 | 192.168.4.52 |  3306 |           0 | Slave, Running
-------------------+-----------------+-------+-------------+-------
MaxScale> 

在客户端50连接读写分离服务器57，查询和插入数据
在主库上创建db8库，在从库和客户端查看
[root@mysql51 ~]# mysql -uroot -p123456
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> create database db8;
Query OK, 1 row affected (0.04 sec)

[root@mysql50 ~]# mysql -P4006 -h192.168.4.57 -ujhh -p123456
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| db8                |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)
mysql> use db8;
mysql> show tables;
mysql> create table a(
    -> id int primary key auto_increment,
    -> name char(19)
    -> );
mysql> insert into db8.a(name) values("jim"),("tom");
mysql> select * from db8.a;
+----+------+
| id | name |
+----+------+
|  1 | jim  |
|  2 | tom  |
+----+------+

在主库上查看数据
[root@mysql51~]# mysql -uroot -p123456
mysql> use db8;
mysql> select * from db8.a;
+----+------+
| id | name |
+----+------+
|  1 | jim  |
|  2 | tom  |
+----+------+

在从库上查看数据
[root@mysql52~]# mysql -uroot -p123456
mysql> use db8;
mysql> select * from db8.a;
+----+------+
| id | name |
+----+------+
|  1 | jim  |
|  2 | tom  |
+----+------+

验证是否实现了数据的读写分离
在从库本机插入数据，在客户端查询时可以看到主库和从库的数据
[root@mysql52 ~]# mysql -uroot -p123456
mysql> use db8;
mysql> insert into db8.a(name) values("harry");
mysql> select * from db8.a;
+----+-------+
| id | name  |
+----+-------+
|  1 | jim   |
|  2 | tom   |
|  3 | harry |
+----+-------+
3 rows in set (0.00 sec)

[root@mysql50~]# mysql -P4006 -h192.168.4.57 -ujhh -p123456
mysql> use db8;
mysql> select * from db8.a;
+----+-------+
| id | name  |
+----+-------+
|  1 | jim   |
|  2 | tom   |
|  3 | harry |
+----+-------+

在从库写入数据，主库是看不到的
[root@mysql50~]# mysql -h192.168.4.51 -ujhh -p123456
mysql> use db8;
mysql> select * from db8.a;
+----+------+
| id | name |
+----+------+
|  1 | jim  |
|  2 | tom  |
+----+------+
2 rows in set (0.00 sec)

#######################################################
mysql多实例
安装软件：
[root@mysql50~]# ls
  mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz
[root@mysql50 ~]# systemctl stop mysqld
[root@mysql50 ~]# systemctl enable mysqld
[root@mysql50 ~]# tar -xvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz 
mysql-5.7.20-linux-glibc2.12-x86_64/bin/myisam_ftdump
mysql-5.7.20-linux-glibc2.12-x86_64/bin/myisamchk
mysql-5.7.20-linux-glibc2.12-x86_64/bin/myisamlog
mysql-5.7.20-linux-glibc2.12-x86_64/bin/myisampack
.....................
.....................
[root@mysql50 ~]# ls
    mysql-5.7.20-linux-glibc2.12-x86_64
    mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz
将解压目录移动到/usr/local/下并命名为mysql 
[root@mysql50 ~]# mv mysql-5.7.20-linux-glibc2.12-x86_64 /usr/local/mysql
[root@mysql50 ~]# cd /usr/local/mysql
[root@mysql50 mysql]# ls
bin  COPYING  docs  include  lib  man  README  share  support-files

创建配置文件定义多实例服务
[root@mysql50 ~]# mv /etc/my.cnf /root #将原来的mysql配置文件移走
[root@mysql50 ~]# vim /etc/my.cnf #新建配置文件
 [mysqld_multi]
 mysqld=/usr/local/mysql/bin/mysqld_safe
 mysqladmin=/usr/local/mysql/bin/mysqladmin
 usr=root

 [mysqld1] #mysql实例一
 server_id=1
 log-bin=jhh
 datadir=/dir
 port=3307
 log-error=/dir/mysql3307.err
 pid-file=/dir/mysql3307.pid
 socket=/dir1/mysql3307.sock

 [mysqld2] #mysql实例二
 datadir=/dir2
 port=3308
 log-error=/dir2/mysql3308.err
 pid-file=/dir2/mysql3308.pid
 socket=/dir2/mysql3308.sock
[root@mysql50 ~]# mkdir /dir1
[root@mysql50 ~]# mkdir /dir2
起服务
[root@mysql50 ~]# /usr/local/mysql/bin/mysqld_multi start 1
[root@mysql50 ~]# ls /dir1
auto.cnf        ib_logfile0  mysql          mysql3307.sock       sys
ib_buffer_pool  ib_logfile1  mysql3307.err  mysql3307.sock.lock
ibdata1         ibtmp1       mysql3307.pid  performance_schema
[root@mysql50 ~]# netstat -tunlp | grep :3307
tcp6       0      0 :::3307                 :::*                    LISTEN      4067/mysqld         
使用初始密码登陆mysql实例一并改root密码
[root@mysql50 ~]# /usr/local/mysql/bin/mysql  -uroot -p'icQSYbeT;3Vz' -S /dir1/mysql3307.sock
mysql> alter user root@"localhost" identified by '123456';
Query OK, 0 rows affected (0.00 sec)
 
mysql> show master status; #查看日志文件
+------------+----------+--------------+------------------+-------------------+
| File       | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+------------+----------+--------------+------------------+-------------------+
| jhh.000001 |      154 |              |                  |                   |
+------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

授权：允许客户端使用jhh用户连接50主机
      把数据存储在实例2服务的db8库下的a表
运行50主机的实例二服务
[root@mysql50 ~]# /usr/local/mysql/bin/mysqld_multi start 2

用管理员登陆修改root密码 添加授权用户jh
[root@mysql50 ~]# /usr/local/mysql/bin/mysql --user="root" --password="jm414Bn_w<(t" -S /dir2/mysql3308.sock
mysql> alter user root@"localhost" identified by '123456';
mysql> grant all on db8.* to jh@"%" identified by "123456" with grant option;
使用客户端连接50数据库服务器，连接时要指定端口
[root@mysql57 ~]# mysql -h192.168.4.50 -P3308 -ujh -p123456
mysql> show databases;
mysql> show grants;
+-----------------------------------------------------------+
| Grants for jh@%                                           |
+-----------------------------------------------------------+
| GRANT ALL PRIVILEGES ON db8.* TO 'jh'@'%' WITH GRANT OPTION |
+-----------------------------------------------------------+
1 row in set (0.00 sec)

mysql> create database db8;
mysql> create table db8.a(id int);
mysql> insert into db8.a values(8888);
mysql> select * from db8.a;
+------+
| id   |
+------+
| 8888 |
+------+
1 row in set (0.00 sec)

在50服务本机实例2目录下可以查看对应的文件信息
[root@mysql50 ~]# ls /dir2/db8
a.frm  a.ibd  db.opt
############################################################
############################################################
mysql高可用集群
环境准备：
                      客户端50
                         |
                         | 
                    管理主机56
                         |
      ——————————————————————————————————————————————
       |          |        |          |           |
       |          |        |          |           |
     数据库    数据库     数据库     数据库     数据库
    服务器51   服务器52   服务器53   服务器54   服务器55
配置ssh
所有的数据库服务器间可以互相以root用户无密码登陆
管理主机56可以免密登陆数据库服务器

安装依赖软件：51---56上
    yum -y install perl-*
拷贝软件 mha到51---56
部署mysql一主多从 主从同步结构：要求如下
     主库：192.168.4.51 并启用主从同步两种角色的半同步复制模式
     从库：52  备用主库 启用liblog日志  
               用户授权 启用主从两种角色的半同步复制功能 
     从库：53  备用主库
     从库：54  纯从库
     从库：55  纯从库
#####################################################################
配置无密码连接在51--56上都要操作，
56可以无密码连接51--55 51--55不可以无密码连接56
以51为例：
[root@mysql51 ~]# ssh-keygen 回车生成密钥
将公钥拷贝给52----55
[root@mysql51 ~]# ssh-copy-id root@192.168.4.52-->56

安装依赖软件在51--56上都做 以51为例：
[root@mysql51 ~]# yum -y install perl*

配置51为主库：
将mysql恢复到初始状态（这一步省略）
[root@mysql51~]# vim /etc/my.cnf
[mysqld]
server_id=51
log-bin=master51
plugin-load=rpl_semi_sync_master=semisync_master.so
rpl_semi_sync_master_enabled=1
validate_password_policy=0
validate_password_length=6
[root@mysql51~]# systemctl restart mysqld

添加授权用户jhh
[root@mysql51~]# mysql -uroot -p123456
mysql> grant all on *.* identified by '123456' with grant option;
mysql> select host,user from mysql.user;#查看授权用户
mysql> show master status; #查看主库日志

配置52为51的从库，并且为备用主库
[root@mysql52~]# vim /etc/my.cnf
[mysqld]
server_id=52
log-bin=master52
log_slave_updates #开启级连复制
plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl_semi_sync_master_enabled=1
rpl_semi_sync_slave_enabled=1
validate_password_policy=0
validate_password_length=6

[root@mysql52~]# mysql -uroot -p123456
mysql> change master to
    -> master_host="192.168.4.51",
    -> master_user="jhh",
    -> master_password="123456",
    -> master_log_file="master51.000001",
    -> master_log_pos=451;
Query OK, 0 rows affected, 2 warnings (0.24 sec)

mysql> start slave;
Query OK, 0 rows affected (0.08 sec)

mysql> show slave status\G;
*************************** 1. row ***************************
                  Master_Host: 192.168.4.51
                  Master_User: jhh
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
做主库要有授权用户：
mysql> grant all on *.* to jhh@"%" identified by '123456' with grant option;
mysql> select host,user from mysql.user;#查看授权用户
+-----------+-----------+
| host      | user      |
+-----------+-----------+
| %         | jhh       |
| localhost | mysql.sys |
| localhost | root      |
+-----------+-----------+
3 rows in set (0.00 sec)

mysql> show grants;#查看授权信息

53的配置与52一样（省略）
将53配为51，52的从库  再将53配为备用主库

54的配置 将54配为51的从库
[root@mysql54~]# vim /etc/my.cnf
[mysqld]
server_id=54
validate_password_policy=0
validate_password_length=6
[root@mysql54~]# systemctl restart mysqld
[root@mysql54~]# mysql -uroot -p123456
mysql> change master to
     > master_host="192.168.4.51",
     > master_user="jhh",
     > master_password="123456",
     > master_log_file="master51.000001",
     > master_log_pos=451;
mysql> start slave;
mysql> show slave status\G;
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes

55的配置：将55配置成51的从库
方法和54的配置一样（省略）
56作为管理主机不需要mysql服务
[root@mysql56~]# systemctl stop mysqld
#######################################################################
配置mysql集群：
   在所有主机上51--56安装依赖软件：
以51为例：
[root@mysql51 ~]# yum -y install perl-* #yum源里就有
[root@mysql51 ~]# ls 
      mha.tar.gz
[root@mysql51 ~]# tar -xvf mha.tar.gz
[root@mysql51 ~]# ls
      mha-soft-student
[root@mysql51 ~]# cd mha-soft-student
[root@mysql51 ~]# yum -y install perl-* #yum源里没有
    配置管理主机：56
安装mha-node软件和mha-manager软件
[root@mysql56 mha-soft-student]# yum -y install mha4mysql-node-0.56-0.el6.noarch.rpm 

源码编译安装mha-manager
[root@mysql56 mha-soft-student]# tar -xvf mha4mysql-manager-0.56.tar.gz 
[root@mysql56 mha-soft-student]# cd mha4mysql-manager-0.56/
[root@mysql56 mha4mysql-manager-0.56]# ls
AUTHORS  COPYING  inc  Makefile.PL  META.yml  rpm      t
bin      debian   lib  MANIFEST     README    samples  tests

[root@mysql56 mha4mysql-manager-0.56]# perl Makefile.PL
*** Module::AutoInstall version 1.03
*** Checking for Perl dependencies...
[Core Features]
- DBI                   ...loaded. (1.627)
...........
............
[root@mysql56 mha4mysql-manager-0.56]# make && make install
.............
............
创建manager故障脚本文件
[root@mysql56~]# mkdir /etc/mha_manager
[root@mysql56 mha4mysql-manager-0.56]# cp samples/conf/app1.cnf  /etc/mha_manager/
[root@mysql56 mha4mysql-manager-0.56]# ls /etc/mha_manager/
app1.cnf
[root@mysql56 ~]# vim /etc/mha_manager/app1.cnf
                       [server default]
                 manager_workdir=/var/log/masterha/app1
                 manager_log=/var/log/masterha/app1/manager.log
                 master_ip_failover_script=/usr/local/bin/master_ip_failover
                 ssh_user=root
                 ssh_port=22

                 repl_user=jhh #主库给从库同步数据时的用户
                 repl_password=123456

                 user=root #56上的授权用户 用于连接51--55
                 password=123456

                 [server1]
                 hostname=192.168.4.51
                 candidate_master=1

                 [server2]
                 hostname=192.168.4.52
                 candidate_master=1

                 [server3]
                 hostname=192.168.4.53
                 candidate_master=1

                 [server4]
                 hostname=192.168.4.54
                 no_master=1

                 [server5]
                 hostname=192.168.4.55
                 no_master=1

[root@mysql56 ~]# ls
[root@mysql56 ~]# cd mha-soft-student/
[root@mysql56 mha-soft-student]# cp master_ip_failover  /usr/local/bin/
[root@mysql56 mha-soft-student]# chmod +x /usr/local/bin/master_ip_failover 
[root@mysql56 mha-soft-student]# vim /usr/local/bin/master_ip_failover
              35 my $vip = '192.168.4.100/24';  # Virtual IP 
              36 my $key = "1";
              37 my $ssh_start_vip = "/sbin/ifconfig eth0:$key $vip";
              38 my $ssh_stop_vip = "/sbin/ifconfig eth0:$key down";

在当前主库上配置vip地址：
[root@mysql51 ~]# ifconfig eth0:1 192.168.4.100
[root@mysql51 ~]# ifconfig eth0:1
eth0:1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.4.100  netmask 255.255.255.0  broadcast 192.168.4.255
        ether 52:54:00:0d:71:cf  txqueuelen 1000  (Ethernet)

    配置数据库服务器：
在51上授权监控用户root 在其他主机查看
[root@mysql51 ~]# mysql -uroot -p123456
mysql> grant all on *.* to root@"%" identified by '123456';
Query OK, 0 rows affected, 1 warning (0.12 sec)
mysql> select host,user from mysql.user;
+-----------+-----------+
| host      | user      |
+-----------+-----------+
| %         | jhh       |
| %         | root      |
| localhost | admin     |
| localhost | mysql.sys |
| localhost | root      |
+-----------+-----------+
5 rows in set (0.00 sec)

在52--55上查看授权信息（同上）

安装mha-node软件 51--55 以51为例：
[root@mysql51 mha-soft-student]# yum -y install mha4mysql-node-0.56-0.el6.noarch.rpm 

设置数据库服务器不自动删除本机的中继日志文件51--55
以51为例：
[root@mysql51~]# mysql -uroot -p123456
mysql> set global relay_log_purge=off;
[root@mysql51~]# vi /etc/my.cnf
relay_log_purge=off
[root@mysql51 ~]# systemctl restart mysqld

检测配置：56上进行
ssh的检测：
[root@mysql56 ~]# masterha_check_ssh --conf=/etc/mha_manager/app1.cnf 
............................
Fri Feb 22 14:13:51 2019 - [debug]   ok.
Fri Feb 22 14:13:51 2019 - [debug]  Connecting via SSH from root@192.168.4.54(192.168.4.54:22) to root@192.168.4.55(192.168.4.55:22)..
Fri Feb 22 14:13:52 2019 - [debug]   ok.
Fri Feb 22 14:13:53 2019 - [info] All SSH connection tests passed successfully.

检测主从复制：
[root@mysql56 ~]# masterha_check_repl --conf=/etc/mha_manager/app1.cnf
MySQL Replication Health is OK.

启动服务：
[root@mysql56 ~]# masterha_manager --conf=/etc/mha_manager/app1.cnf --remove_dead_master_conf --ignore_last_failover

测试集群配置：
在51主库上授权客户端访问数据连接的用户jh (select insert)
mysql> create database db9;
mysql> create table db9.a(id int);
mysql> insert into db9.a values(888888);
mysql> grant select,insert on db9.* to jh@"%" identified by '123456';
在客户端50 访问vip连接数据库服务 存取数据
[root@mysql50~]# mysql -h192.168.4.100 -ujh -p123456
mysql> show databases;
mysql> select * from db9.a;

在所有数据库服务器上都可以看到数据

测试高可用
当主库51宕死时 客户端依然可以访问vip 连接数据库服务 存取数据
[root@mysql51 ~]# systemctl stop mysqld
[root@mysql53 ~]# mysql -uroot -p123456
mysql> show slave status\G;
            Master_Host: 192.168.4.52
            Master_User: jhh
       Slave_IO_Running: Yes
      Slave_SQL_Running: Yes
把坏掉的51主机添加到集群中
  开启数据库服务  配置为当前主库的从库
[root@mysql51 ~]# systemctl start mysqld
[root@mysql52 ~]# mysqldump -uroot -p123456 db9 > /root/db9.sql
[root@mysql52 ~]# scp  /root/db9.sql root@192.168.4.51:/root/
[root@mysql51 ~]# mysql -uroot -p123456
mysql> use db9;
mysql> source /root/db9.sql
[root@mysql56 ~]# vim /etc/mha_manager/app1.cnf
[server1]
candidate_master=1
hostname=192.168.4.51

[root@mysql51 ~]# mysql -uroot -p123456
mysql> change master to
    -> master_host="192.168.4.52",
    -> master_user="jhh",
    -> master_password="123456",
    -> master_log_file="master52.000006",
    -> master_log_pos=998;
Query OK, 0 rows affected, 2 warnings (0.22 sec)

mysql> start slave;
Query OK, 0 rows affected (0.01 sec)

mysql> show slave status\G;
*************************** 1. row ***************************
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 192.168.4.52
                  Master_User: jhh
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
################################################################
快速修改主机名：
[root@localhost ~]# hostnamectl set-hostname mysql56
[root@localhost ~]# exit
登出
[root@room9pc01 ~]# ssh root@192.168.4.56
root@192.168.4.56's password: 
Last login: Fri Feb 22 17:06:50 2019 from 192.168.4.254
[root@mysql56 ~]# 
####################################################################

